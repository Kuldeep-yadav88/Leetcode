class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null) return l2;
        if(l2 == null) return l1;
        
        ListNode dummy = new ListNode(-1);
        ListNode prev=dummy;
        ListNode c1=l1;
        ListNode c2=l2;
        
        while(c1!=null && c2!=null){
            if(c1.val<c2.val){
                prev.next=c1;
                c1=c1.next;
                
            }else{
                prev.next=c2;
                c2=c2.next;
                
            }
            prev=prev.next;
        }
        prev.next=c1!=null?c1:c2;
        return dummy.next;
    }
}
-----------------------------------------------------------------------------optimization-----------------------
class Solution 
{

public ListNode mergeTwoLists(ListNode l1, ListNode l2) 
    {
    
        if(l1 == null) return l2;
        if(l2 == null) return l1;
    
        if(l1.val < l2.val)
        {
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
     }else
        {
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
    
    
        }
}
}